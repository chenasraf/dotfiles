# debug: true
check_updates: true
defaults:
  type:
    brew:
      platforms:
        only: ['macos']

install:
  # ----------------------------------------------------------------------
  # 🧰 Configs & Dotfiles
  # ----------------------------------------------------------------------
  # Installers that sync dotfiles or apply local system configurations.

  - name: .config
    type: rsync
    tags: config dotfiles sofmani-config
    opts:
      source: $DOTFILES/.config/
      destination: ~/.config/
      flags: --exclude lazygit.yml --exclude nvim --exclude .git --exclude .DS_Store

  - name: nvim-config
    type: rsync
    tags: config nvim-config
    opts:
      source: $DOTFILES/.config/nvim/
      destination: ~/.config/nvim/
      flags: --delete --exclude .git --exclude .DS_Store

  - name: tmux-config
    type: shell
    tags: config tmux
    platforms:
      only: ['macos']
    opts:
      command: |
        if ! tmux source-file "$HOME/.config/tmux/conf.tmux"; then
          echo "⚠️  Failed to source tmux config"
        fi

  - name: lazygit-config
    type: rsync
    tags: lazygit lazygit-config config
    opts:
      source: $DOTFILES/.config/lazygit.yml
      destination: $LAZYGIT_HOME/config.yml

  - name: device_uid
    type: shell
    check_installed: test -f $DOTFILES/.device_uid
    check_has_update: exit 1
    tags: system
    opts:
      command: |
        source $DOTFILES/plugins/common/colors.zsh
        echo
        echo_yellow "Unique device UID not set up. Enter device uid: "
        read duid
        echo

        if [[ -z $duid ]]; then
          echo_red "Device UID cannot be empty. Exiting"
          exit 1
        fi

        echo $duid >$DOTFILES/.device_uid
        echo_cyan "Device UID set to \"$duid\""

  - name: osx-defaults
    type: shell
    tags: system
    platforms:
      only: ['macos']
    opts:
      check_installed: exit 1
      check_has_update: exit 0
      command: |
        defaults write -g PMPrintingExpandedStateForPrint -bool TRUE
        defaults write -g NSScrollViewRubberbanding -bool FALSE
        defaults write cc.ffitch.shottr growingToolbar 1

  # ----------------------------------------------------------------------
  # 🧾 Git Setup
  # ----------------------------------------------------------------------
  # Installers for git config, GPG setup, aliases, delta integration, etc.

  - name: git-gpg
    type: shell
    tags: git
    check_installed: 'gpg --list-keys | grep -q "$GITHUB_GPG_KEY_ID"'
    opts:
      command: curl https://github.com/web-flow.gpg | gpg --import

  - name: chenasraf/git-open
    type: git
    tags: plugin
    opts:
      ref: master
      destination: ~/.local/share/zsh/plugins

  - name: git-config
    type: shell
    tags: git
    check_installed: (git config --global user.name && git config --global user.email && git config --global user.signingkey) > /dev/null 2>&1
    opts:
      command: |
        git config --global user.signingkey "~/.ssh/id_casraf.pub"
        git config --global filter.lfs.clean "git-lfs clean -- %f"
        git config --global filter.lfs.smudge "git-lfs smudge -- %f"
        git config --global filter.lfs.process "git-lfs filter-process"
        git config --global filter.lfs.required true
        git config --global init.defaultBranch "master"
        git config --global credential.helper "store"
        git config --global pull.rebase true
        git config --global core.excludesfile "~/.config/.gitignore"
        # git config --global core.untrackedCache true
        # git config --global core.fsmonitor true
        git config --global rerere.enabled true
        git config --global gpg.format "ssh"
        git config --global gpg.ssh.allowedSignersFile "~/.ssh/allowed_signers"
        git config --global commit.gpgsign true
        git config --global maintenance.repo "~/.dotfiles"
        git config --global fetch.writeCommitGraph true
        git config --global log.showSignature true
        git config --global core.excludesfile ~/.config/.gitignore

        # ================================================================================================
        # Aliases/Custom commands
        # ================================================================================================

        # Change status
        git config --global alias.unchanged "update-index --assume-unchanged"
        git config --global alias.changed "update-index --no-assume-unchanged"
        git config --global alias.show-unchanged "!git ls-files -v | sed -e 's/^[a-z] //p; d'"
        git config --global alias.list-aliases "!git config --global --list | grep --color alias\. | grep -v list-aliases | sed \"s/alias\./\$(tput setaf 1)/\" | sed \"s/=/\$(tput sgr0)=/\""

        # Delta Pager
        git config --global core.pager delta
        git config --global interactive.diffFilter "delta --color-only"
        # git config --global delta.side-by-side true
        # git config --global delta.navigate true
        # git config --global delta.dark true
        git config --global merge.conflictStyle diff3
        git config --global delta.line-numbers true
        git config --global diff.colorMoved default

  # ----------------------------------------------------------------------
  # 🍺 Custom Homebrew Taps
  # ----------------------------------------------------------------------
  # Taps that provide custom tools or host your own formulas.

  - name: sofmani
    type: brew
    opts:
      tap: chenasraf/tap

  - name: vstask
    type: brew
    opts:
      tap: chenasraf/tap

  - name: treelike
    type: group
    steps:
      - name: treelike
        type: brew
        opts:
          tap: chenasraf/tap
      - name: treelike
        type: shell
        platforms:
          only: ['linux']
        type: github-release
        platforms:
          only: ['linux']
        opts:
          repository: chenasraf/treelike
          destination: ~/.local/bin
          download_filename: treelike-{tag}-linux-amd64

  - name: gi_gen
    type: group
    steps:
      - name: gi_gen
        type: brew
        opts:
          tap: chenasraf/tap
      - name: gi_gen
        type: github-release
        platforms:
          only: ['linux']
        opts:
          repository: chenasraf/gi_gen
          destination: ~/.local/bin
          download_filename: gi_gen-{tag}-linux-amd64

  # ----------------------------------------------------------------------
  # 🛠️ Dev Tools & Utilities
  # ----------------------------------------------------------------------
  # CLI utilities and general tools used in your workflows.

  - name: lazygit
    type: group
    steps:
      - name: lazygit
        type: brew
        opts:
          tap: jesseduffield/lazygit
      - name: lazygit
        type: github-release
        platforms:
          only: ['linux']
        opts:
          repository: jesseduffield/lazygit
          strategy: tar
          destination: ~/.local/bin
          # destination: /usr/local/bin
          download_filename: lazygit_{version}_linux_x86_64.tar.gz

  - name: lazydocker
    type: group
    steps:
      - name: lazydocker
        type: brew
        opts:
          tap: jesseduffield/lazydocker
      - name: lazydocker
        type: github-release
        platforms:
          only: ['linux']
        opts:
          repository: jesseduffield/lazydocker
          strategy: tar
          destination: ~/.local/bin
          # destination: /usr/local/bin
          download_filename: lazydocker_{version}_linux_x86_64.tar.gz

  - name: lazysql
    type: group
    steps:
      - name: lazysql
        type: brew
        opts:
          tap: jorgerojas26/lazysql
      - name: lazysql
        type: github-release
        platforms:
          only: ['linux']
        opts:
          repository: jorgerojas26/lazysql
          strategy: tar
          destination: ~/.local/bin
          # destination: /usr/local/bin
          download_filename: lazysql_Linux_x86_64.tar.gz

  - name: atuin
    type: shell
    opts:
      command: curl --proto '=https' --tlsv1.2 -LsSf https://setup.atuin.sh | sh
      update_command: atuin-update

  - name: delta
    type: group
    steps:
      - name: delta
        type: shell
        platforms:
          only: ['linux']
        opts:
          command: |
            curl https://github.com/dandavison/delta/releases/download/0.17.0/git-delta_0.17.0_amd64.deb | dpkg -i
      - name: git-delta
        type: brew
        bin_name: delta

  - name: jq
    type: brew

  - name: yq
    type: pipx

  - name: direnv
    type: group
    steps:
      - name: direnv
        type: brew
      - name: direnv
        type: shell
        platforms:
          only: ['linux']
        opts:
          command: export bin_path=/usr/local/bin curl -sfL https://direnv.net/install.sh | bash

  - name: dotenvx
    type: group
    steps:
      - name: dotenvx
        type: brew
        opts:
          tap: dotenvx/brew
      - name: dotenvx
        type: shell
        platforms:
          only: ['linux']
        opts:
          command: curl -sfS https://dotenvx.sh | sh

  - name: ffmpeg
    type: brew

  # - name: ollama
  #   type: group
  #   steps:
  #     - name: ollama
  #       type: brew
  #       post_install: brew services start ollama
  #       post_update: brew services restart ollama
  #     - name: ollama
  #       type: shell
  #       check_installed: ollama --version
  #       check_has_update: true
  #       opts:
  #         command: curl -fsSL https://ollama.com/install.sh | sh
  #         update_command: curl -fsSL https://ollama.com/install.sh | sh

  # - name: ghcr.io/open-webui/open-webui:main
  #   bin_name: open-webui
  #   tag: openwebui
  #   type: docker
  #   opts:
  #     skip_if_unavailable: true
  #     flags: >
  #       -d
  #       -p 3300:8080
  #       --add-host=host.docker.internal:host-gateway
  #       -v open-webui:/app/backend/data

  - name: catimg
    type: brew

  - name: home
    type: shell
    opts:
      bin_name: tx
      command: |
        cd $DOTFILES/utils
        pnpm i && pnpm build && pnpm ginst

  - name: pandoc
    type: group
    steps:
      - name: pandoc
        type: brew
      - name: pandoc
        # type: github-release
        # platforms:
        #   only: ['linux']
        # opts:
        #   repository: jgm/pandoc
        #   destination: ~/.local/bin
        #   download_filename: pandoc-{tag}-linux-amd64
        type: shell
        platforms:
          only: ['linux']
        opts:
          command: |
            cd $(mktemp -d)
            VERSION=$(curl -s "https://api.github.com/repos/jgm/pandoc/tags" | jq -r ".[] | select(.name | contains('cli')) | .name" | head -n 1)
            curl -Lo pandoc.deb "https://github.com/jgm/pandoc/releases/download/$VERSION/pandoc-${VERSION}-1-amd64.deb"
            dpkg -i pandoc.deb
            rm -rf pandoc.deb

  - name: nextcloud-talk
    type: brew
    check_installed: test -d "/Applications/Nextcloud Talk.app"

  - name: aseprite
    type: group
    enabled: false
    steps:
      - name: cmake
        type: brew
      - name: ninja
        type: brew
      - name: aseprite/aseprite
        type: git
        post_install: |
          cd ~/.local/build/aseprite
          rm -f build/CMakeCache.txt
          ./build.sh --auto --norun
          cp bin/aseprite /Applications/Aseprite.app/Contents/MacOS/aseprite

          RAW_TAG=$(git describe --tags --abbrev=0)
          VERSION=${RAW_TAG#v}
          PLIST="/Applications/Aseprite.app/Contents/Info.plist"
          plutil -convert xml1 "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" "$PLIST"
        post_update: |
          cd ~/.local/build/aseprite
          rm -f build/CMakeCache.txt
          ./build.sh --auto --norun
          cp bin/aseprite /Applications/Aseprite.app/Contents/MacOS/aseprite

          RAW_TAG=$(git describe --tags --abbrev=0)
          VERSION=${RAW_TAG#v}
          PLIST="/Applications/Aseprite.app/Contents/Info.plist"
          plutil -convert xml1 "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $VERSION" "$PLIST"
          /usr/libexec/PlistBuddy -c "Set :CFBundleVersion $VERSION" "$PLIST"
        opts:
          destination: ~/.local/build
          clone_flags: --depth=1

  # ----------------------------------------------------------------------
  # 💻 Language Runtimes & Package Managers
  # ----------------------------------------------------------------------
  # Installers for language version managers like pyenv, fnm, etc.

  - name: fnm
    type: shell
    post_install: |
      fnm install --lts
      fnm use lts-latest
    opts:
      command: curl -fsSL https://fnm.vercel.app/install | bash

  - name: pyenv
    type: group
    steps:
      - name: pyenv
        type: brew
      - name: pyenv
        type: shell
        platforms:
          only: ['linux']
        opts:
          command: 'curl https://pyenv.run | bash'

  # ----------------------------------------------------------------------
  # 📦 PNPM Ecosystem
  # ----------------------------------------------------------------------
  # Global CLI tools and utilities installed via pnpm.

  - name: pnpm
    type: shell
    check_has_update: exit 0
    opts:
      command: npm i -g pnpm
      update_command: pnpm self-update

  - name: typescript
    bin_name: tsc
    type: pnpm
    opts:
      command: pnpm i -g typescript

  - name: tldr
    type: pnpm

  - name: simple-scaffold
    type: pnpm

  - name: firebase-tools
    bin_name: firebase
    type: pnpm

  - name: prettier
    type: pnpm

  - name: http-server
    type: pnpm

  - name: licenseg
    type: pnpm

  - name: vscode-langservers-extracted
    bin_name: vscode-json-language-server
    type: pnpm

  - name: "@google/gemini-cli"
    bin_name: gemini
    type: pnpm

  - name: "@anthropic-ai/claude-code"
    bin_name: claude
    type: pnpm

  - name: "@openai/codex"
    bin_name: codex
    type: pnpm

  # ----------------------------------------------------------------------
  # 🐍 Python Tools (via pipx)
  # ----------------------------------------------------------------------
  # Python tools and utilities installed via pipx.

  - name: pipx
    type: group
    post_install: sudo pipx ensurepath --global
    steps:
      - name: pipx
        type: brew

      - name: pipx
        type: apt
        platforms:
          only: ['linux']

      - name: jedi-language-server
        type: pipx

      - name: black
        type: pipx

      - name: black
        type: pipx

  # ----------------------------------------------------------------------
  # 🔌 Zsh & Tmux Plugins
  # ----------------------------------------------------------------------
  # Git-based plugins and themes for Zsh shell and Tmux.

  - name: local-plugins
    type: rsync
    tags: plugin
    opts:
      source: ~/.dotfiles/plugins
      destination: ~/.local/share/zsh/
      # flags: --delete

  - name: mfaerevaag/wd
    type: git
    tags: plugin zsh
    opts:
      destination: ~/.local/share/zsh/plugins

  - name: romkatv/powerlevel10k
    type: git
    tags: plugin zsh
    opts:
      ref: master
      destination: ~/.local/share/zsh/plugins

  - name: zsh-users/zsh-autosuggestions
    type: git
    tags: plugin zsh
    opts:
      destination: ~/.local/share/zsh/plugins

  - name: tmux-plugins/tpm
    type: git
    tags: plugin tmux
    opts:
      destination: ~/.tmux/plugins

  - name: catppuccin/tmux
    type: git
    tags: plugin tmux
    opts:
      destination: ~/.tmux/plugins/catppuccin

  - name: tmux-plugins/tmux-online-status
    type: git
    tags: plugin tmux
    opts:
      destination: ~/.tmux/plugins

  - name: tmux-plugins/tmux-battery
    type: git
    tags: plugin tmux
    opts:
      destination: ~/.tmux/plugins

  - name: tmux-plugins/tmux-cpu
    type: git
    tags: plugin tmux
    opts:
      destination: ~/.tmux/plugins

  # ----------------------------------------------------------------------
  # 🧭 Desktop Productivity Tools
  # ----------------------------------------------------------------------
  # Your own tools or other GitHub binaries not installed via a package manager.

  - name: easy-move-plus-resize
    type: brew
    check_installed: test -d "/Applications/Easy Move+Resize.app"
